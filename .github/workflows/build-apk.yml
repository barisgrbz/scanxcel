name: Build and Release APK

on:
  push:
    branches: [ main ]
    paths: [ 'pubspec.yaml' ]  # Sadece pubspec.yaml değişirse tetikle
    tags: [ 'v*' ]
  workflow_dispatch:  # Manuel tetikleme seçeneği

permissions:
  contents: write

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'
          cache: true
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate localization files
        run: flutter gen-l10n
        
      - name: Setup Android signing
        run: |
          # Create production keystore for GitHub releases
          mkdir -p ~/.android
          
          # Create a production keystore with fixed parameters for consistency
          keytool -genkey -v -keystore ~/.android/scanxcel-release.keystore \
            -storepass "scanxcel2024github" -alias "scanxcel-release" -keypass "scanxcel2024github" \
            -keyalg RSA -keysize 2048 -validity 25000 \
            -dname "CN=ScanXcel,O=ScanXcel GitHub Release,L=Istanbul,S=Istanbul,C=TR" \
            -storetype JKS
          
          # Create key.properties for release signing
          echo "storePassword=scanxcel2024github" > android/key.properties
          echo "keyPassword=scanxcel2024github" >> android/key.properties
          echo "keyAlias=scanxcel-release" >> android/key.properties
          echo "storeFile=$HOME/.android/scanxcel-release.keystore" >> android/key.properties
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: scanxcel-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          
      - name: Get version from pubspec.yaml
        id: get_version
        run: echo "VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)" >> $GITHUB_OUTPUT
        
      - name: Generate release notes
        id: generate_notes
        run: |
          # Son commit mesajından release notları oluştur
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          COMMIT_BODY=$(git log -1 --pretty=format:"%b")
          DATE=$(date '+%Y-%m-%d %H:%M:%S')
          
          # Commit mesajından başlığı al (emoji'den sonraki kısım)
          TITLE=$(echo "$COMMIT_MSG" | sed 's/^[🚀✨🔧🐛📱🎨🔗🛡️⚡🎯📋][[:space:]]*//')
          
          # Tam commit body'sini kullan
          FULL_BODY=""
          if [[ -n "$COMMIT_BODY" ]]; then
            # Satır sonu karakterlerini koru
            FULL_BODY="$COMMIT_BODY"
          else
            FULL_BODY="### $TITLE"$'\n\n'"Bu güncelleme çeşitli hata düzeltmeleri ve iyileştirmeler içerir."
          fi
          
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "TITLE=$TITLE" >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_OUTPUT
          echo "FULL_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$FULL_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        
      - name: Rename APK file
        run: |
          cd build/app/outputs/flutter-apk
          mv app-release.apk scanxcel.apk
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/scanxcel.apk
          name: Release v${{ steps.get_version.outputs.VERSION }}
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          body: |
            # ${{ steps.generate_notes.outputs.COMMIT_MSG }}
            
            **📅 Release Date**: ${{ steps.generate_notes.outputs.DATE }}
            
            ${{ steps.generate_notes.outputs.FULL_BODY }}
            
            ---
            
            ## 📱 APK Download
            **scanxcel.apk** - Android uygulama dosyası
            
            ### 📋 Kurulum
            1. APK dosyasını indirin
            2. "Bilinmeyen kaynaklar"dan yüklemeyi etkinleştirin  
            3. APK'yı yükleyin ve kullanmaya başlayın
            
            ### 🌐 Web Sürümü
            🔗 **[Canlı Demo](https://barisgrbz.github.io/scanxcel/)** - Kurulum gerektirmez!
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
